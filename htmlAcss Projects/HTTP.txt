HperText Transfer Protocol

@Based on request/response stateless protocol

  >> Client open connection to server
  >> client sends HTTP request for a resource
  >> Server sends HTTP response to the client(w/resource)
  >> Client closes connection to server


@@ URN: Uniform Resource Name

   >> Uniquely identifies resource or name of resource
   >> Does not tell us how to get the resource

Example : HTML/CSS/Javascript/Web Development/Yaakov/Chainkin

@@ URI : Uniform Resource Identifier

   >> Uniquely identifies resource or location of resource
   >> Does not necessarily tell us how to get the resource

Example: /official_web_site/index.html


@@ URL : Uniform REsource Locator
 
  >> Uniform URI that provides info on how to get resource
example : http://www.mysite.com/official_web_site/index.html

HTTP REquest Structure (GET)

GET /index.html?firstName=Yaakov HTTP/1.1

GET is a method

/index.html is a URI String

?firstName=Yaakov is a name/value pairs  seperated by & 

example : ?first=Yaakov&last=Chaikin



HTTP/1.1 is a HTTP version

HTTP Methods

>> GET

  > REtrieves the resource
  > Data is passed to sever as part of the URI
     > i.e, query string

>> POST
   
   > Sends data to server in order to be processed 
   > Data is sent in the message body

>> More methods not covered here





HTTP Request Structure (POST)

POST /index.html HTTP/1.1

Host: coursera.org
Accept-charset: utf-8   } request headers

firstName = Yaakov...

...

... } message body


HTTP Response Structure

HTTP/1.1 200 OK

HTTP/1.1  } HTTP version

200  } Response status code 

OK  } English phrase describing status code


 
Some REsponse Status Codes

@ 200 OK
  > Ok, here is the content you requested

@ 404 Not Found 
  > SErver can't find the resource requested

@ 403 Forbidden
  > Unauthenticated client tried to acess a secure resource

@ 500 Internal Server Error
  > Some unhandled erro was raised on the server.



WHAT IS AJAX

Asynchronous Javascript And XML

 > While Ajax started with XML, very few apps use it nowadays
   > Plain text(at times as html) and JSON is used instead

Ajax Web App Flow

WEB Page --> HTTP REquest sent by Javascript --> server

web page <-- REsponse : Small piece of data that's inserted into current page    <-- SErver;


@Faster Response 
 > Less Bandwidth, nicer exerience for user


Synchornous Execution 

>> Execution of one instruction at a time

>> Can't start execution of another insturction until the first instruction finished its execution 


Asynchronous Execution 

@ Execution of more than one instruction at a time

> Asynchronous instruction returns right away 
> The actual execution is done in a seperate thread or process

